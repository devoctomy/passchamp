{
  "InputPins": [
    {
      "Key": "InputFileName",
      "Type": "System.String",
      "Value": "c:/temp/test.vault"
    },
    {
      "Key": "DataParserSections",
      "Type": "System.String",
      "Value": "Iv,0,16;Cipher,16,~16;Salt,~16,~0"
    },
    {
      "Key": "KeyLength",
      "Type": "System.Int32",
      "Value": 32
    },
    {
      "Key": "SaltLength",
      "Type": "System.Int32",
      "Value": 16
    },
    {
      "Key": "IterationCount",
      "Type": "System.Int32",
      "Value": 10000
    }
  ],
  "OutputPins": [
    {
      "Key": "UnencryptedVaultJson",
      "Type": "System.String",
      "Value": "JsonSerialiserPinOutputFunction.vaultparse.Vault"
    }
  ],
  "Nodes": [
    {
      "Key": "filereader",
      "Type": "devoctomy.Passchamp.Core:devoctomy.Passchamp.Core.Graph.IO.FileReaderNode",
      "Inputs": [
        {
          "Key": "FileName",
          "Value": "Pins.InputFileName"
        }
      ],
      "Next": {
        "Key": "dataparser",
        "Type": "devoctomy.Passchamp.Core:devoctomy.Passchamp.Core.Graph.Data.DataParserNode",
        "Inputs": [
          {
            "Key": "Bytes",
            "Value": "filereader.Bytes"
          },
          {
            "Key": "Sections",
            "Value": "ParseDataParserSections.Pins.DataParserSections"
          }
        ],
        "Next": {
          "Key": "enterpassword",
          "Type": "devoctomy.Passchamp.Windows:devoctomy.Passchamp.Windows.Graph.Windows.PasswordEnterDialogNode",
          "Inputs": [],
          "Next": {
            "Key": "derivekey",
            "Type": "devoctomy.Passchamp.Core:devoctomy.Passchamp.Core.Graph.Cryptography.DeriveKeyFromPasswordNode",
            "Inputs": [
              {
                "Key": "Password",
                "Value": "enterpassword.Password"
              },
              {
                "Key": "KeyLength",
                "Value": "Pins.KeyLength"
              },
              {
                "Key": "IterationCount",
                "Value": "Pins.IterationCount"
              },
              {
                "Key": "Salt",
                "Value": "GetDataParserSectionValue.dataparser.Salt"
              }
            ],
            "Next": {
              "Key": "decrypt",
              "Type": "devoctomy.Passchamp.Core:devoctomy.Passchamp.Core.Graph.Cryptography.DecryptNode",
              "Inputs": [
                {
                  "Key": "Cipher",
                  "Value": "GetDataParserSectionValue.dataparser.Cipher"
                },
                {
                  "Key": "Iv",
                  "Value": "GetDataParserSectionValue.dataparser.Iv"
                },
                {
                  "Key": "Key",
                  "Value": "derivekey.Key"
                }
              ],
              "Next": {
                "Key": "decode",
                "Type": "devoctomy.Passchamp.Core:devoctomy.Passchamp.Core.Graph.Text.UnicodeDecoderNode",
                "Inputs": [
                  {
                    "Key": "EncodedBytes",
                    "Value": "decrypt.DecryptedBytes"
                  }
                ],
                "Next": {
                  "Key": "vaultparse",
                  "Type": "devoctomy.Passchamp.Core:devoctomy.Passchamp.Core.Graph.Vault.VaultParserNode",
                  "Inputs": [
                    {
                      "Key": "VaultJson",
                      "Value": "decode.PlainText"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  ]
}